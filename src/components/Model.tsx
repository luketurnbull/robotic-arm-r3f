/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import type { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    base: THREE.Mesh;
    shoulder: THREE.Mesh;
    arm: THREE.Mesh;
    elbow: THREE.Mesh;
    Cylinder006: THREE.Mesh;
    Cylinder006_1: THREE.Mesh;
    Cylinder008: THREE.Mesh;
    Cylinder008_1: THREE.Mesh;
  };
  materials: {
    ["metal-yellow"]: THREE.MeshStandardMaterial;
    ["metal-silver"]: THREE.MeshStandardMaterial;
    ["metal-black"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: React.JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/v8.glb") as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="base"
        castShadow
        receiveShadow
        geometry={nodes.base.geometry}
        material={materials["metal-yellow"]}
        scale={[2.43, 1, 2.43]}
      />
      <mesh
        name="shoulder"
        castShadow
        receiveShadow
        geometry={nodes.shoulder.geometry}
        material={materials["metal-yellow"]}
        position={[0, 0.019, 0]}
        scale={[2.43, 1, 2.43]}
      />
      <mesh
        name="arm"
        castShadow
        receiveShadow
        geometry={nodes.arm.geometry}
        material={materials["metal-yellow"]}
        position={[1.961, 5.843, 0]}
        rotation={[0, 0, -1.568]}
        scale={[1.438, 0.377, 1.438]}
      />
      <mesh
        name="elbow"
        castShadow
        receiveShadow
        geometry={nodes.elbow.geometry}
        material={materials["metal-yellow"]}
        position={[0, 14.006, 0]}
        scale={[1, 0.888, 1]}
      />
      <group
        name="forearm"
        position={[-0.156, 13.908, 10.808]}
        rotation={[0, 0, Math.PI / 2]}
        scale={[0.531, 0.962, 0.534]}
      >
        <mesh
          name="Cylinder006"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder006.geometry}
          material={materials["metal-yellow"]}
        />
        <mesh
          name="Cylinder006_1"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder006_1.geometry}
          material={materials["metal-silver"]}
        />
      </group>
      <group
        name="hand"
        position={[0, 13.398, 9.832]}
        scale={[0.21, 0.384, 0.21]}
      >
        <mesh
          name="Cylinder008"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder008.geometry}
          material={materials["metal-black"]}
        />
        <mesh
          name="Cylinder008_1"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder008_1.geometry}
          material={materials["metal-silver"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/v8.glb");
